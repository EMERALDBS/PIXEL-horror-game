export default function Game() {
  return (
    <div className="game-container w-screen h-screen bg-black flex items-center justify-center p-4 sm:p-8 md:p-12 relative overflow-hidden">
      <canvas id="gameCanvas" className="absolute top-0 left-0 w-full h-full"></canvas>
      <div className="absolute top-0 left-0 w-full h-full bg-opacity-30 bg-gray-900 animate-flicker"></div>
      <div className="text-red-500 text-lg sm:text-xl md:text-2xl font-bold text-center z-10">Welcome to the Haunted Woods</div>
      <audio id="backgroundMusic" autoPlay loop>
        <source src="/sounds/horror-background.mp3" type="audio/mpeg" />
      </audio>
      <audio id="schoolHallMusic">
        <source src="/sounds/eery-school-hall.mp3" type="audio/mpeg" />
      </audio>
      <audio id="screechingSound">
        <source src="/sounds/screeching.mp3" type="audio/mpeg" />
      </audio>
      <div id="joystick-container" className="absolute bottom-10 left-10 w-24 h-24 bg-gray-700 rounded-full opacity-70 flex items-center justify-center">
        <div id="joystick" className="w-12 h-12 bg-gray-500 rounded-full"></div>
      </div>
      <script>
        {`const canvas = document.getElementById('gameCanvas');
        const ctx = canvas.getContext('2d');
        function resizeCanvas() {
          canvas.width = window.innerWidth;
          canvas.height = window.innerHeight;
        }
        window.addEventListener('resize', resizeCanvas);
        resizeCanvas();
        
        const characters = {
          main: { color: 'white', x: 50, y: 50 },
          alex: { color: 'gray', x: 100, y: 50 },
          james: { color: 'orange', x: 150, y: 50 },
          chase: { color: 'tan', x: 200, y: 50 },
          monster: { color: 'black', x: 300, y: 50, eyeColor: 'red' },
          cloakedMan: { color: 'black', x: 350, y: 50, eyeColor: 'blue' }
        };
        
        const bathroomStalls = [
          { x: 50, y: 200, width: 30, height: 50, color: 'green' },
          { x: 100, y: 200, width: 30, height: 50, color: 'green' },
          { x: 150, y: 200, width: 30, height: 50, color: 'green' },
          { x: 200, y: 200, width: 30, height: 50, color: 'green' }
        ];
        
        const stallPoles = [
          { x: 65, y: 200, width: 5, height: 50, color: 'white' },
          { x: 115, y: 200, width: 5, height: 50, color: 'white' },
          { x: 165, y: 200, width: 5, height: 50, color: 'white' }
        ];
        
        const bloodSplatter = [
          { x: 80, y: 220, width: 10, height: 5, color: 'red' },
          { x: 130, y: 215, width: 12, height: 6, color: 'darkred' },
          { x: 180, y: 225, width: 14, height: 7, color: 'crimson' }
        ];
        
        const scratches = [
          { x: 90, y: 210, width: 15, height: 2, color: 'black' },
          { x: 140, y: 205, width: 18, height: 2, color: 'black' },
          { x: 190, y: 215, width: 20, height: 2, color: 'black' }
        ];
        
        function drawScene() {
          ctx.clearRect(0, 0, canvas.width, canvas.height);
          bathroomStalls.forEach(stall => {
            ctx.fillStyle = stall.color;
            ctx.fillRect(stall.x, stall.y, stall.width, stall.height);
          });
          stallPoles.forEach(pole => {
            ctx.fillStyle = pole.color;
            ctx.fillRect(pole.x, pole.y, pole.width, pole.height);
          });
          bloodSplatter.forEach(blood => {
            ctx.fillStyle = blood.color;
            ctx.fillRect(blood.x, blood.y, blood.width, blood.height);
          });
          scratches.forEach(scratch => {
            ctx.fillStyle = scratch.color;
            ctx.fillRect(scratch.x, scratch.y, scratch.width, scratch.height);
          });
          Object.values(characters).forEach(char => {
            ctx.fillStyle = char.color;
            ctx.fillRect(char.x, char.y, 20, 20);
            if (char.eyeColor) {
              ctx.fillStyle = char.eyeColor;
              ctx.fillRect(char.x + 5, char.y + 5, 3, 3);
              ctx.fillRect(char.x + 12, char.y + 5, 3, 3);
            }
          });
        }
        setInterval(drawScene, 100);
      `}
      </script>
    </div>
  );
}

